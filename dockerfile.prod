#? Multi-stage build:

# Dependencies
FROM node:21-alpine3.19 AS deps


WORKDIR /usr/src/app

COPY package*.json ./
COPY package-lock.json ./

RUN npm install




# Builder - Build the app
FROM node:21-alpine3.19 AS build

ARG ORDERS_DATABASE_URL
ENV DATABASE_URL=$ORDERS_DATABASE_URL

WORKDIR /usr/src/app

# Copy node modules from deps
COPY --from=deps /usr/src/app/node_modules ./node_modules

# Copy all the source code of the app
COPY . .

RUN npx prisma migrate deploy
RUN npx prisma generate

# RUN npm run test

RUN npm run build

RUN npm ci -f --only=production && npm cache clean --force



# Create final docker image
FROM node:21-alpine3.19 AS prod

WORKDIR /usr/src/app

COPY --from=build /usr/src/app/node_modules ./node_modules

# Copy the DIST folder
COPY --from=build /usr/src/app/dist ./dist

ENV NODE_ENV=production

USER node

EXPOSE 3000

CMD [ "node", "dist/main" ]